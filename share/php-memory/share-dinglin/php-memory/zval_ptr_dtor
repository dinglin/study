##zend/zend_variables.c  zend/zend_execute_API.c

ZEND_API void _zval_ptr_dtor(zval **zval_ptr ZEND_FILE_LINE_DC) /* {{{ */
{
#if DEBUG_ZEND>=2
    printf("Reducing refcount for %x (%x): %d->%d\n", *zval_ptr, zval_ptr, Z_REFCOUNT_PP(zval_ptr), Z_REFCOUNT_PP(zval_ptr) - 1);
#endif
    Z_DELREF_PP(zval_ptr);//refcount-1
    if (Z_REFCOUNT_PP(zval_ptr) == 0) {
        TSRMLS_FETCH();
 
        if (*zval_ptr != &EG(uninitialized_zval)) {
            GC_REMOVE_ZVAL_FROM_BUFFER(*zval_ptr);//从节点缓冲区中删除相关节点信息
            zval_dtor(*zval_ptr);//直接回收内存
            efree_rel(*zval_ptr);//释放掉变量zval中变量占用的空间和zval结构自身的空间
        }
    } else {
        TSRMLS_FETCH();
 
        if (Z_REFCOUNT_PP(zval_ptr) == 1) {
            Z_UNSET_ISREF_PP(zval_ptr);//去掉引用
        }
 
        GC_ZVAL_CHECK_POSSIBLE_ROOT(*zval_ptr);//通知gc回收到垃圾列表
    }
}
