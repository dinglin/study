################

1. dirname() //函数返回路径中的目录部分。
  	code : echo dirname("c:/testweb/home.php");
  	view : c:/testweb

2. array_slice(array,offset,length,preserve) //取出array数据中到从offset(可为负值)坐标开始到length条数据，
	code : $a=array("a"=>"Dog","b"=>"Cat","c"=>"Horse","d"=>"Bird");
	       print_r(array_slice($a,1,2));
	view : Array ( [b] => Cat [c] => Horse )

3. shuffle(array) //函数把数组中的元素按随机顺序重新排列，这将删除原有的键名而不仅是重新排序。
	code : $my_array = array("a" => "Dog", "b" => "Cat", "c" => "Horse");
	       shuffle($my_array);
	       print_r($my_array);
	view : Array ( [0] => Cat [1] => Horse [2] => Dog )

4. mt_rand(start,end) //取出随机数，start到end，包括start和end

5. array_rand(array,number)  //随机取出array中的number条数据

6. is_callable(name) //检测参数是否为合法的可调用结构 name可以是函数名或变量名

7. header(string,replace,http_response_code)  //string="name:value" replace="true(替换)false(允许相同类型的多个报头)"

8. ip2long() long2ip() //ip做长整型与字符串转换

9. array_shift(array) //删除数组中第一个元素，并返回该元素

10. ucfirst(string)   //首字母大写

11. microtime() //函数返回当前 Unix 时间戳和微秒数。参数true,这样就能直接返回浮点数，

12. memory_get_usage() //参数默认为FALSE，表示得到的内存使用量不包括该函数（PHP 内存管理器）占用的内存；当为TRUE时，得到的内存为包括该函数占用的内存。

13. usort(array,strfunction)//对数据进行自定义排序

14. sprintf() 函数把格式化的字符串写写入一个变量中  $txt = sprintf("%s world. Day number %u",$str,$number);

15. 执行php文件：/usr/local/php-5.3.3/bin/php -f a.php 

16. 查看拓展 sudo /usr/local/php-5.3.3/bin/php -m

17. sha1() 函数计算字符串的 SHA-1 散列

18. ksort() 函数按照键名对数组排序，为数组值保留原来的键。

19. array_values() 函数返回一个包含给定数组中所有键值的数组，但不保留键名

20. array_pop() 函数删除数组中的最后一个元素。

21. void set_time_limit (int seconds) 设定一个程式所允许执行的秒数，如果到达限制的时间，程式将会传回错误。它预设的限制时间是30秒,如果将秒数设为0，表示无时间上的限制。

eval()
